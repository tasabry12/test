/*                   Copyright (c) 2007 Venere Net S.p.A.
 *                             All Rights Reserved
 *
 * This software is the confidential and proprietary information of
 * Venere Net S.p.A. ("Confidential  Information"). You  shall not disclose
 * such  Confidential Information and shall use it only in accordance with
 * the terms  of the license agreement you entered into with Venere Net S.p.A.
 *
 * VENERE NET S.P.A. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY
 * OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
 * OR NON-INFRINGEMENT. VENERE NET S.P.A. SHALL NOT BE LIABLE FOR ANY DAMAGES
 * SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THIS
 * SOFTWARE OR ITS DERIVATIVES.
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.venere.ace.dao;



import com.venere.ace.abstracts.AException;
import com.venere.ace.dtos.ATaskResultDTO;
import com.venere.ace.exception.EHandlerException;
import com.venere.ace.interfaces.ICommandResult;
import com.venere.ace.interfaces.ITaskHandler;
import com.venere.ace.idtos.ICommandRequestDTO;
import com.venere.utils.dto.PageDTO;
import java.util.Map;

/**
 *
 * @author quatrini
 */
public class MockBrowser implements ITaskHandler{

   @Override
   public void startBrowser() throws EHandlerException {
      throw new UnsupportedOperationException("Not supported yet.");
   }

   @Override
   public ICommandResult open(ICommandRequestDTO obj) throws EHandlerException {
      System.out.println("Operation : OPEN ");
      printRequest(obj);
      ATaskResultDTO oResult = new ATaskResultDTO("MockActionTask");
      oResult.setIsCorrect(true);
      oResult.setMessage("Action OPEN executed");
      
      return oResult;
   }

   @Override
   public ICommandResult close(ICommandRequestDTO obj) throws EHandlerException {
      System.out.println("Operation : Close ");
      printRequest(obj);
      ATaskResultDTO oResult = new ATaskResultDTO("MockActionTask");
      oResult.setIsCorrect(true);
      oResult.setMessage("Action CLOSE executed");
      
      return oResult;
      
   }

   @Override
   public ICommandResult click(ICommandRequestDTO obj) throws EHandlerException {
 System.out.println("Operation : click ");
      printRequest(obj);
      return null;
   }

   @Override
   public String getText(ICommandRequestDTO obj) throws EHandlerException {
      System.out.println("Operation : getText ");
      printRequest(obj);
      return "";
   }

   @Override
   public ICommandResult type(ICommandRequestDTO obj) throws EHandlerException {
      System.out.println("Operation : type ");
      printRequest(obj);
      return null;
   }

   @Override
   public ICommandResult select(ICommandRequestDTO obj) throws EHandlerException {
      System.out.println("Operation : select ");
      printRequest(obj);
      return null;
   }

   @Override
   public void setMapSettings(Map oMapSettings) {
      throw new UnsupportedOperationException("Not supported yet.");
   }

   @Override
   public boolean isTextPresent(ICommandRequestDTO obj) throws EHandlerException {
       System.out.println("Operation : isTextPresent ");
       printRequest(obj);
       return true;
   }

   private void printRequest(ICommandRequestDTO obj){
      System.out.println("TaskName : "+obj.getTaskName()+"  Location Element :"+obj.getLocationElement()+" Locator Type: "+obj.getLocatorType()+" Value : "+obj.getValue());

   }

   @Override
   public ICommandResult checkUrl(Map oValues) {
      throw new UnsupportedOperationException("Not supported yet.");
   }

   @Override
   public ICommandResult closeAll(ICommandRequestDTO obj) throws EHandlerException {
      throw new UnsupportedOperationException("Not supported yet.");
   }

   @Override
   public void toggle(ICommandRequestDTO obj) throws EHandlerException {
      throw new UnsupportedOperationException("Not supported yet.");
   }

   @Override
   public ICommandResult selectValue(ICommandRequestDTO obj) throws EHandlerException {
      throw new UnsupportedOperationException("Not supported yet.");
   }

    @Override
    public ICommandResult submit(ICommandRequestDTO obj) throws EHandlerException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

   @Override
   public PageDTO getHtmlPage(ICommandRequestDTO obj)   {
      throw new UnsupportedOperationException("Not supported yet.");
   }

    @Override
    public ICommandResult makeAPrintScreen(ICommandRequestDTO obj) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public ICommandResult hover(ICommandRequestDTO obj) throws AException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

   @Override
   public ICommandResult setCookie(ICommandRequestDTO obj) throws AException {
      throw new UnsupportedOperationException("Not supported yet.");
   }

}
