/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*                   Copyright (c) 2007 Venere Net S.r.l.
 *                             All Rights Reserved
 *
 * This software is the confidential and proprietary information of
 * Venere Net S.r.l. ("Confidential  Information"). You  shall not disclose
 * such  Confidential Information and shall use it only in accordance with
 * the terms  of the license agreement you entered into with Venere Net S.r.l.
 *
 * VENERE NET S.r.l. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY
 * OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
 * OR NON-INFRINGEMENT. VENERE NET S.r.l. SHALL NOT BE LIABLE FOR ANY DAMAGES
 * SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THIS
 * SOFTWARE OR ITS DERIVATIVES.
 */
package com.venere.ace.utility;

import com.venere.ace.exception.EHandlerException;
import com.venere.ace.interfaces.ICommandResult;
import com.venere.utils.dto.SnapInfoDTO;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import org.apache.commons.io.FileUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.remote.Augmenter;

/**
 *
 * @author fcastaldi
 */
public class ScreenUtil {

    protected Log oLogger = LogFactory.getLog(getClass());
    protected WebDriver oBrowser;
    public final static String BOTH = "BOTH";
    public final static String FULL = "FULL";
    public final static String BROWSER = "BROWSER";

    public ScreenUtil(WebDriver oBrowser) {
        this.oBrowser = oBrowser;
    }

    public ICommandResult makeFullScreenShot(String sPostiFixName) throws EHandlerException {
        SnapInfoDTO oSnap = new SnapInfoDTO();
        oSnap.setDatePrint(new Date());
        Date oNow = new Date();
        String sTestCaseName = System.getProperty("com.venere.ace.currentTestCase");
        String sScreenShotFileName = sTestCaseName + "_" + (sPostiFixName == null ? "" : sPostiFixName + "_") + DateUtil.dateFormatter(oNow) + ".png";
        oSnap.setPathSnap(FolderManager.PrintScreenFolder + sScreenShotFileName);
        CaptureScreen oCaptureScreen = new CaptureScreen();
        oCaptureScreen.saveImagePrintScreen(FolderManager.PrintScreenFolder + sScreenShotFileName);
        oSnap.setIsCorrect(true);
        oSnap.setIsStopped(false);
        oSnap.setMessage("Screenshot executed");
        return oSnap;
    }

    public ICommandResult makeAPrintScreen(String sPostiFixName) throws EHandlerException {
        SnapInfoDTO oSnap = new SnapInfoDTO();
        oSnap.setDatePrint(new Date());
        oSnap.setPathSnap(FolderManager.PrintScreenFolder);
        Date oNow = new Date();
        String sTestCaseName = System.getProperty("com.venere.ace.currentTestCase");
        String sFileName;

        try {
            sFileName = sTestCaseName + "_" +(sPostiFixName==null?"":sPostiFixName+"_" )+ DateUtil.dateFormatter(oNow) + ".png";

            oSnap.setSnapName(sFileName);
            saveImageFile(FolderManager.PrintScreenFolder + sFileName);
            oSnap.setIsCorrect(true);
            oSnap.setIsStopped(false);
            oSnap.setMessage("Screenshot executed");

        } catch (Exception ex) {
            String sMessage = " Make Print Screen Failure   " + ex.getMessage();
            oLogger.error(sMessage);
            //throw new EHandlerException(EHandlerException.HandlerErrorCode.ACTION_TASK, sMessage, ex);
        }

        return oSnap;
    }

    private void saveImageFile(String sPath) {
        try {
            TakesScreenshot oScreenshotBrowser;
            if (oBrowser instanceof TakesScreenshot) {
                oScreenshotBrowser = (TakesScreenshot) oBrowser;
            } else {
                oScreenshotBrowser = (TakesScreenshot) new Augmenter().augment(oBrowser);
            }
            FileUtils.copyFile(oScreenshotBrowser.getScreenshotAs(OutputType.FILE), new File(sPath));
        } catch (IOException ex) {
            oLogger.error("PrintScreen Failure: " + ex.getMessage());
        }
    }
}
